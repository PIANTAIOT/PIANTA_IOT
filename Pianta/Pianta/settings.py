"""
Django settings for Pianta project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import datetime
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yw@48y&@$4_y^m=2w$(*hw(qg$qw$q+-u7ba@^#wl53p2%^6ih'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # otras aplicaciones
    #'django_celery_beat',

    # restful app
    'rest_framework',
    #auth apps
    'rest_framework.authtoken',
    'dj_rest_auth',

    #register
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'dj_rest_auth.registration',

    'ApiPianta',
    'Project_Api',
]
SITE_ID = 1

#REST_FRAMEWORK = {
#    'DEFAULT_AUTHENTICATION-CLASSES': (
#        'rest_framework.authentication.TokenAuthentication',
#    ),
#    'DEFAULT_PERMUSSION_CLASSES' : (
#        'rest_framework.permission.IsAutenticated',
#   ),
#}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',


    #'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Pianta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Pianta.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
#'cambiar los datos de name, user, password, host.'
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'pianta',
        'USER': 'girardotcito',
        'PASSWORD': 'pianta123',
        'HOST': '34.173.137.165',
        'PORT': '3306',
        'OPTIONS':{
            'init_command':"SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}

#DATABASE_ROUTERS = [
#    'database_routers.auth_router.AuthRouter',
#    'database_routers.pianta_router.PiantaRouter'
#]


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'America/Bogota'
USE_TZ = True
USE_I18N = True
USE_L10N = True

# TIME_ZONE = 'America/Bogota'

# USE_I18N = True

# USE_TZ = True

# USE_L10N = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR/"static" ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

#DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL="ApiPianta.User"

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",

    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
)


ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
USERNAME_REQUIRED=True
ACCOUNT_EMAIL_VERIFICATION = None
ACCOUNT_CONFIRM_EMAIL_ON_GET = False
ACCOUNT_USER_MODEL_USERNAME_FIELD=None




REST_AUTH_SERIALIZERS={
    "LOGIN_SERIALIZER":"ApiPianta.serializers.NewLoginSerializer",
    'USER_DETAILS_SERIALIZER': 'ApiPianta.serializers.CustomUserDetailsSerializer',
    'TOKEN_SERIALIZER': 'ApiPianta.serializers.NewTokenSerializer',
}

REST_AUTH_REGISTER_SERIALIZERS={
    "REGISTER_SERIALIZER":"ApiPianta.serializers.NewRegisterSerializer",
    'LOGIN_SERIALIZER': 'ApiPianta.serializers.NewLoginSerializer',
    'TOKEN_SERIALIZER': 'ApiPianta.serializers.NewTokenSerializer',

}



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ]
}
#TOKEN_EXPIRE_TIME = datetime.timedelta(hours=1).total_seconds()


# SITE_NAME = 'http://127.0.0.1:8000'

# # restablecimiento de contraseñas
# PASSWORD_RESET_TEMPLATE_NAME = 'registration/password_reset_email.html'
# PASSWORD_RESET_FROM_EMAIL = 'senaiot04@gmail.com' + SITE_NAME


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_PORT = 587
EMAIL_HOST_USER = "senaiot04@gmail.com"
EMAIL_HOST_PASSWORD = "azlipupcfcirmtta"


# AUTHENTICATION_BACKENDS = [
#     'ApiPianta.authentication.CustomBackend',
#     'django.contrib.auth.backends.ModelBackend',
# ]

# Configuración de Celery
# CELERY_BROKER_URL = 'amqp://localhost'
# CELERY_RESULT_BACKEND = 'rpc://'
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# #CELERY_TIMEZONE = 'America/Los_Angeles'

# # Importar la app de Celery
# from .celery import app as celery_app

# # Registrar la app de Celery
# CELERY_APP = celery_app
